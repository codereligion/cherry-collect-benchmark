<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>7</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.codereligion</groupId>
    <artifactId>codereligion-cherry-collect-java-benchmark</artifactId>
    <version>0.1.0-SNAPSHOT</version>

    <name>Cherry-Collect-Java-Benchmark</name>
    <description>Implements benchmarks for cherry-collect</description>
    <url>https://github.com/codereligion/cherry-collect-benchmark/java</url>

    <developers>
        <developer>
            <id>SierraGolf</id>
            <name>Sebastian Gr√∂bler</name>
        </developer>
    </developers>

    <scm>
        <url>scm:git:ssh://git@github.com:codereligion/cherry-collect-benchmark.git</url>
        <connection>scm:git:ssh://git@github.com:codereligion/cherry-collect-benchmark.git</connection>
        <developerConnection>scm:git:git@github.com:codereligion/cherry-collect-benchmark.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <prerequisites>
        <maven>3.0</maven>
    </prerequisites>

    <properties>
        <!-- basic maven properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- plugin dependencies -->
        <resources.plugin.version>2.6</resources.plugin.version>
        <compiler.plugin.version>3.1</compiler.plugin.version>
        <surefire.plugin.version>2.15</surefire.plugin.version>
        <license.plugin.version>1.9.0</license.plugin.version>
        <source.plugin.version>2.4</source.plugin.version>
        <javadoc.plugin.version>2.9.1</javadoc.plugin.version>
        <release.plugin.version>2.4.1</release.plugin.version>
        <build.helper.plugin.version>1.8</build.helper.plugin.version>
        <scm.plugin.version>1.9.2</scm.plugin.version>

        <!-- dependency versions -->
        <cherry.collect.version>0.1.0-SNAPSHOT</cherry.collect.version>
        <joda.time.version>2.6</joda.time.version>
        <rxjava.version>1.0.4</rxjava.version>
        <jsr305.version>2.0.1</jsr305.version>
        <junit.version>4.12</junit.version>
        <hamcrest.version>1.3</hamcrest.version>
        <mockito.version>1.9.5</mockito.version>

        <!-- ci properties -->
        <jacoco.version>0.6.2.201302030002</jacoco.version>
        <skip.code.coverage>true</skip.code.coverage>

        <!-- sonar properties -->
        <sonar.language>java</sonar.language>
        <sonar.sourceEncoding>${project.build.sourceEncoding}</sonar.sourceEncoding>
        <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
        <sonar.jacoco.reportPath>${project.build.directory}/jacoco-ut.exec</sonar.jacoco.reportPath>
    </properties>

    <build>
        <plugins>

            <!-- copy resources and replace variables -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${resources.plugin.version}</version>
                <configuration>
                    <outputDirectory>${project.basedir}</outputDirectory>
                    <resources>
                        <resource>
                            <directory>${project.basedir}/templates</directory>
                            <filtering>true</filtering>
                        </resource>
                    </resources>
                </configuration>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- compilation -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler.plugin.version}</version>
                <configuration>
                    <!-- try build for the currently set java specification version, e.g.
                        1.6 -->
                    <source>${java.specification.version}</source>
                    <target>${java.specification.version}</target>

                    <!-- check for warnings, fail and show if there are any -->
                    <showWarnings>true</showWarnings>
                    <compilerArgs>
                        <arg>-proc:none</arg>
                        <arg>-Werror</arg>
                        <arg>-Xlint</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <!-- testing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.plugin.version}</version>
            </plugin>

            <!-- sources -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${source.plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- java doc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${javadoc.plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-docs</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <dependencies>

        <!-- |||||||||||||||||||| -->
        <!-- compile dependencies -->
        <!-- |||||||||||||||||||| -->

        <dependency>
            <groupId>com.codereligion</groupId>
            <artifactId>codereligion-cherry-collect</artifactId>
            <version>${cherry.collect.version}</version>
        </dependency>

        <dependency>
            <groupId>io.reactivex</groupId>
            <artifactId>rxjava</artifactId>
            <version>${rxjava.version}</version>
        </dependency>

        <!-- ||||||||||||||||| -->
        <!-- test dependencies -->
        <!-- ||||||||||||||||| -->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-integration</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda.time.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <profiles>

        <profile>
            <id>generate.license.headers</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.mycila.maven-license-plugin</groupId>
                        <artifactId>maven-license-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>format-license</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>format</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>


</project>
